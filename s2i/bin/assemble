#!/bin/bash

# Source code provided to S2I is at ${HOME}
LOCAL_SOURCE_DIR=${HOME}
mkdir -p $LOCAL_SOURCE_DIR

# the subdirectory within LOCAL_SOURCE_DIR from where we should copy build
# artifacts (*.war, *.jar)
ARTIFACT_DIR=${ARTIFACT_DIR:-target}

# Resulting WAR files will be deployed to $CATALINA_HOME/standalone/deployments
DEPLOY_DIR=$CATALINA_HOME/webapps
mkdir -p $DEPLOY_DIR

# Copy the source for compilation
cp -Rf /opt/s2i/destination/src/. $LOCAL_SOURCE_DIR
chgrp -R 0 $LOCAL_SOURCE_DIR
chmod -R g+rw $LOCAL_SOURCE_DIR

# If a build.xml is present, this is a normal build scenario
# so run ant.
if [ -f "$LOCAL_SOURCE_DIR/$BUILD_XML_PATH/build.xml" ]; then

  if [ -z "$DEPLOY_ROOT_CONTEXT" ]; then
    export DEPLOY_ROOT_CONTEXT=true
  fi
  if [ -z "$JAVA_SECURITY_CONFIG" ]; then
    export JAVA_SECURITY_CONFIG=false
  fi

  pushd $LOCAL_SOURCE_DIR/$BUILD_XML_PATH &> /dev/null
  
  #Append user provided args
  if [ -n "$ANT_ARGS_APPEND" ]; then
    export ANT_ARGS="$ANT_ARGS $ANT_ARGS_APPEND"
  fi
  echo " Found build.xml... attempting to build with 'ant ${ANT_ARGS}'"

  ant --version
  ant $ANT_ARGS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from ant $ANT_ARGS"
    exit $ERR
  fi

  echo -n "Cleaning $DEPLOY_DIR..."
  rm -rf $DEPLOY_DIR/*
  echo " cleaned up"

  if [ ! -z `find $LOCAL_SOURCE_DIR -name $WAR_NAME` ]
  then
    echo "Moving built war file `find $LOCAL_SOURCE_DIR -name $WAR_NAME` into $DEPLOY_DIR for later deployment..."
    if [[ "$DEPLOY_ROOT_CONTEXT" = "false" ]]; then
      mv `find $LOCAL_SOURCE_DIR -name $WAR_NAME` $DEPLOY_DIR/
    else
      mv `find $LOCAL_SOURCE_DIR -name $WAR_NAME` $DEPLOY_DIR/ROOT.war
    fi
  else
    echo "Aborting due to error : File not found, moving $WAR_NAME file, maybe it doesn't exist"
    exit 1
  fi

  if [[ "$INCREMENTAL" = "false" ]]; then
    echo -n "INCREMENTAL is set to $INCREMENTAL, we are now cleaning image \"rm -rf . .m2\"..."
    rm -rf ./* .m2
    echo " cleaned up"
  fi
  popd &> /dev/null
else
  echo "Moving binaries in source directory into $DEPLOY_DIR for later deployment..."
  if [[ "$DEPLOY_ROOT_CONTEXT" = "false" ]]; then
    mv `find $LOCAL_SOURCE_DIR -name $WAR_NAME` $DEPLOY_DIR/
  else
    mv `find $LOCAL_SOURCE_DIR -name $WAR_NAME` $DEPLOY_DIR/ROOT.war
  fi
  
  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from moving $WAR_NAME file, maybe it doesn't exist "
    exit $ERR
  fi
fi

if [ -n "$TOMCAT_EXTRA_LIBS" ]; then
  echo "Downloading tomcat extra libs..."
  cd $CATALINA_HOME/lib
  for LIB in $(echo $TOMCAT_EXTRA_LIBS | tr ";" "\n")
  do
    echo "Downloading '$LIB'..."
    curl -O "$LIB"
  done
fi

if [ -n "$CA_CERTS" ]; then
  echo "Downloading certs..."
  cd $HOME
  for LIB in $(echo $CA_CERTS | tr ";" "\n")
  do
    echo "Downloading '$LIB'..."
    curl -o cert.cer "$LIB"
    chmod 755 cert.cer
    $JAVA_HOME/bin/keytool -import -v -trustcacerts -file cert.cer -keystore $JAVA_HOME/jre/lib/security/cacerts -keypass changeit -storepass changeit -noprompt
  done
fi

echo "...done"
exit $rc
